// BOJ-03474 / 교수가 된 현우
// devgeon, 2022.05.27, C++17
// https://www.acmicpc.net/problem/3474
 
// 자연수 N이 주어지면 N!의 오른쪽 끝에 있는 0의 개수를 구하는 프로그램을 작성하시오.
// 입력: 첫째 줄에 테스트 케이스의 개수 T가 주어지고, 이어서 T개의 줄에 정수 N이 주어진다. (1 ≤ N ≤ 1000000000)
// 출력: 각 줄마다 N!의 오른쪽 끝에 있는 0의 개수를 출력한다.


// 팩토리얼 계산 값 끝에 0이 오는 경우는 n부터 1까지 곱할 때 10이 얼마나 곱해지냐에 달려있으므로 각각의 수의 
// 소인수에 대하여 2와 5가 얼마나 포함되어 있는지를 세면 팩토리얼을 직접 구하지 않고도 0의 개수를 알 수 있다.
// 이때, 2 이상인 모든 자연수 n에 대하여 n~1 각각의 소인수에 포함된 5의 개수가 2보다 적기 때문에 5의 개수만 
// 구하여도 0의 개수를 알 수 있다.

// TLE -> 5의 개수만 찾는 것이므로 반복문에서 5의 배수들만 대상으로 삼도록 개선하였음.
//     -> n 이하의 자연수 중 5^i가 포함되어 있는 수의 개수는 나눗셈으로 쉽게 구할 수 있으므로 
//        5^1부터 5^i<=n인 5^i까지 각각 개수를 구하여 누적합 하면 1부터 n까지의 수 각각의 소인수에 대해 
//        5가 몇 개 포함되어 있는지 알 수 있다.
//     -> 입출력 속도를 높일 수 있는 구문 2가지(26~28행)을 추가함. (세부 설명은 "BOJ-03474-교수가된현우.md" 참고)


#include<iostream>

using namespace std;

int main()
{
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	
	int n=0;
	int number=0;
	int count_five=0;
	
	cin >> n;
	
	for(int i=0; i<n; i++) {
		cin >> number;
		count_five = 0;
		for(int power=5; power<=number; power*=5) {
			count_five += number / power;
		}
		cout << count_five << '\n';
	}
	
    return 0;
}
